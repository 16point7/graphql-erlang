## QUERIES

query GoblinQuery($id : Id!) {
  goblin: monster(id: $id) {
    id
    name
    hitpoints
  }
}

query GoblinThingQuery($id : Id!) {
  goblin: thing(id: $id) {
    ...MonsterFragment
  }
}

query ScalarOutputCoercion($id : Id!) {
  goblin: monster(id: $id) {
    ...MonsterFragment
    color
  }
}

query InlineFragmentTest($id : Id!) {
  thing(id: $id) {
    ... on Monster {
      id
      hitpoints
    }
  }
}

query FragmentOverUnion1($id: Id!) {
  monster(id: $id) {
    ... on Thing {
      ... on Monster {
        id
      }
    }
  }
}

query MonsterStatsZero($id: Id!) {
  monster(id: $id) {
      stats {
          attack shellScripting yell
      }
  }
}

query MonsterStatsOne($id: Id!) {
  monster(id: $id) {
    statsVariantOne {
      attack shellScripting yell
    }
  }
}

query MonsterStatsTwo($id: Id!) {
  monster(id: $id) {
    statsVariantTwo {
       attack shellScripting yell
    }
  }
}

query FragmentOverUnion2($id: Id!) {
  monster(id: $id) {
    ...UnionThingFragment
  }
}

fragment UnionThingFragment on Thing {
  ... on Monster {
    id
  }
}

query FragmentOverUnion3($id: Id!) {
  monster(id: $id) {
    ... on Node {
      id
    }
  }
}

query TestFieldMerge($id: Id!) {
  monster(id: $id) {
    id
    hitpoints
    hitpoints
  }
}

## MUTATIONS
mutation IntroduceMonster($input: IntroduceMonsterInput!) {
  introduceMonster(input: $input) {
    clientMutationId
    monster {
      ...FatMonsterFragment
    }
  }
}

mutation IntroduceMonsterFat($input: IntroduceMonsterInput!) {
  introduceMonster(input: $input) {
    clientMutationId
    monster {
      ...FatMonsterFragment
      plushFactor
      stats {
        attack,
        shellScripting
        yell
      }
    }
  }
}

mutation IntroduceMonsterFatExpr {
  introduceMonster(input:
    { clientMutationId: "123",
      name: "Green Slime", 
      color: "#1be215",
      hitpoints: 9001,
      mood: TRANQUIL,
      properties: [MURLOC, MECH],
      stats: [{
        attack: 7,
        shellScripting: 5,
        yell: "..."
      }]
    }) {
      clientMutationId,
      monster {
        ...FatMonsterFragment
        plushFactor
        stats {
          attack
          shellScripting
          yell
        }
      }
    }
}

mutation IntroduceRoom($input: IntroduceRoomInput!) {
  introduceRoom(input: $input) {
    clientMutationId
    room {
      ...RoomFragment
    }
  }
}

mutation SpawnMinion($input: SpawnMinionInput!) {
  spawnMinion(input: $input) {
    clientMutationId
    room {
      ...RoomFragment
      contents { ...SimpleMonster }
    }
    monster {
      name
      id
    }
  }
}

## FRAGS

fragment MonsterFragment on Monster {
  id
  name
  hitpoints
}

fragment SimpleMonster on Monster {
  name
  hitpoints
}

fragment FatMonsterFragment on Monster {
  ...MonsterFragment
  color
  mood
  properties
}

fragment RoomFragment on Room {
  id
  description
}
